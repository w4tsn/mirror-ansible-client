---

- name: "Select tasks for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
  include_tasks: "{{ distro_file }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  loop_control:
    loop_var: distro_file

- name: Setup Powerline in bashrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      # Powerline
      if [ -f `which powerline-daemon` ]; then
        powerline-daemon -q
        POWERLINE_BASH_CONTINUATION=1
        POWERLINE_BASH_SELECT=1
        . /usr/share/powerline/bash/powerline.sh
      fi
  tags:
    - bash

- name: Make sure vimrc is present
  file:
    path: "{{ ansible_env.HOME }}/.vimrc"
    state: touch
  tags:
    - vim

- name: Setup Powerline in vimrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.vimrc"
    block: |
      # Powerline
      python3 from powerline.vim import setup as powerline_setup
      python3 powerline_setup()
      python3 del powerline_setup
  tags:
    - vim

- name: Create config directory
  file:
    path: "{{ ansible_env.HOME }}/.config/powerline"
    state: directory

- name: Create themes directory
  file:
    path: "{{ ansible_env.HOME }}/.config/powerline/themes/shell"
    state: directory

- name: Create colorschemes directory
  file:
    path: "{{ ansible_env.HOME }}/.config/powerline/colorschemes"
    state: directory

- name: Setup configuration files
  copy:
    src: "{{ item.src }}"
    dest: "{{ ansible_env.HOME }}/.config/powerline/{{ item.dest }}"
  loop:
    - src: colorschemes.json
      dest: colorschemes/default.json
    - src: config.json
      dest: config.json
    - src: left_only.json
      dest: themes/shell/left_only.json
